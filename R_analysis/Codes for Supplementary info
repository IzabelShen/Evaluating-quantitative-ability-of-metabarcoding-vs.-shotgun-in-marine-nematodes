#####Codes for supplementary info of the manuscript######

####################
#####Plot for PCoA
####################

#####################
###18S DNA input#####
setwd("/Users/Dandan/Desktop/NEWMockManuscript/18SMockResults/DNA_input")
RelaAbun <-read.csv("./RelAbun18S.csv",header=T, row.names=1) #Sample in row, ASV in colum
bc.d <-vegdist(t(RelaAbun[,1:9]), k=2, method="bray")
bc.pcoa=cmdscale(bc.d, eig=TRUE)
bc.pcoa

#percent explained by the first and second axis
ax1.v.bc=bc.pcoa$eig[1]/sum(bc.pcoa$eig)
ax2.v.bc=bc.pcoa$eig[2]/sum(bc.pcoa$eig)
# look at the output
ax1.v.bc *100
ax2.v.bc *100

# or
percent_explained <- 100 * bc.pcoa$eig /sum(bc.pcoa$eig)
#'round' function will round our numbers to the one significant digit to the right of the decimal point
#If there is 0 after the decimal point it will be truncated, and if we want that decimal point in there, 
#use 'format' function, so wrap the "round" function in the "format" function, as nesting fucntion
#and the argument is "nsmall=1" in 'format'allows to ensure at least there is one value to the right of decimal point.
#"trim=True" is trim the white space from the front strings
pretty_pe <-format(round(percent_explained[1:2], digits=1), nsmall=1,trim=TRUE)
#library("glue") mased from dplyr
library("dplyr")
library("glue")
labs<- c(glue("PCo 1 ({pretty_pe[1]}%)"), glue("PCo 2 ({pretty_pe[2]}%)"))
  
Mymeta =data.frame(Type=c("Tolerant_Dominance","Tolerant_Dominance","Tolerant_Dominance", "Less sensitive_Dominance", "Less sensitive_Dominance","Less sensitive_Dominance","Sensitive_Dominance", "Sensitive_Dominance","Sensitive_Dominance"))
PCoA= data.frame(PCoA1=bc.pcoa$points[,1], PCoA2=bc.pcoa$points[,2], Type=Mymeta$Type)
PCoA$Type<-factor(PCoA$Type, levels=c("Tolerant_Dominance","Less sensitive_Dominance","Sensitive_Dominance"))
find_hull <-function(PCoA) PCoA[chull(PCoA$PCoA1,PCoA$PCoA2),]
hulls <-ddply(PCoA, "Type",find_hull) 

p1 <-ggplot(data=PCoA, aes(PCoA1, PCoA2, shape=Type)) + 
geom_point(aes(shape=Type), size=2.5) + 
geom_polygon(data = hulls, aes(x=PCoA1, y=PCoA2), alpha=0.3) +
scale_shape_manual(values=c(15,16,17))+
theme_bw()+ 
theme(panel.grid.minor.y=element_blank(),panel.grid.major.y=element_blank())+ 
theme(panel.grid.minor.x=element_blank(),panel.grid.major.x=element_blank()) + 
labs(title="18S_DNA input", x=labs[1], y=labs[2]) + 
theme(axis.title.y=element_text(colour = 'black',size = 12,family='serif')) + 
theme(axis.title.x=element_text(colour = 'black',size = 12, family='serif')) + 
theme(axis.text.y=element_text(colour = 'black', size = 12,family='serif' )) + 
theme(axis.text.x=element_text(colour = 'black', size = 12, family='serif')) + 
theme(legend.text=element_text(size=13,family="serif")) + 
theme(legend.key=element_rect(fill="transparent", colour=NA)) + 
theme(legend.background=element_rect(fill=NA)) + 
theme(plot.title=element_text(colour= 'black', size=13, family="serif",face='bold')) + 
theme(legend.title=element_text(color="black", size=12,family='serif')) + 
guides(color=guide_legend(override.aes=list(shape=15, size=2))) + 
guides(shape=guide_legend(override.aes=list(size=3.6))) + 
theme(legend.key.size=unit("0.5","cm")) +
theme(legend.position="none")


#####################
####28S DNA input####
setwd("/Users/Dandan/Desktop//NEWMockManuscript/28SMockResults/DNAinput")
RelaAbun <-read.csv("./RelAbun28S_DNA.csv", header=T, row.names=1) #Sample in row, ASV in colum
#nmds.otu <-nmds.otu <-metaMDS(t(RelaAbun), distance="horn", trymax=200)
#nmds.otu$stress # 0.0524833
###NOTE : NMDS plot does not work on this dataset, as NMDS require non-linear 
######Using PCoA metric instead to plot ######

bc.d <-vegdist(t(RelaAbun), k=2, method="bray")
bc.pcoa=cmdscale(bc.d, eig=TRUE)
bc.pcoa

#percent explained by the first and second axis
ax1.v.bc=bc.pcoa$eig[1]/sum(bc.pcoa$eig)
ax2.v.bc=bc.pcoa$eig[2]/sum(bc.pcoa$eig)
# look at the output
ax1.v.bc *100
ax2.v.bc *100

# or
percent_explained <- 100 * bc.pcoa$eig /sum(bc.pcoa$eig)
#'round' function will round our numbers to the one significant digit to the right of the decimal point
#If there is 0 after the decimal point it will be truncated, and if we want that decimal point in there, 
#use 'format' function, so wrap the "round" function in the "format" function, as nesting fucntion
#and the argument is "nsmall=1" in 'format'allows to ensure at least there is one value to the right of decimal point.
#"trim=True" is trim the white space from the front strings
pretty_pe <-format(round(percent_explained[1:2], digits=1), nsmall=1,trim=TRUE)
#library("glue") mased from dplyr
#library("dplyr")
library("glue")
labs<- c(glue("PCo 1 ({pretty_pe[1]}%)"), glue("PCo 2 ({pretty_pe[2]}%)"))
  
Mymeta =data.frame(Type=c("Tolerant_Dominance","Tolerant_Dominance","Tolerant_Dominance", "Less sensitive_Dominance", "Less sensitive_Dominance","Less sensitive_Dominance","Sensitive_Dominance", "Sensitive_Dominance","Sensitive_Dominance"))
PCoA= data.frame(PCoA1=bc.pcoa$points[,1], PCoA2=bc.pcoa$points[,2], Type=Mymeta$Type)
PCoA$Type<-factor(PCoA$Type, levels=c("Tolerant_Dominance","Less sensitive_Dominance","Sensitive_Dominance"))
find_hull <-function(PCoA) PCoA[chull(PCoA$PCoA1,PCoA$PCoA2),]
hulls <-ddply(PCoA, "Type",find_hull) 

p2 <-ggplot(data=PCoA, aes(PCoA1, PCoA2, shape=Type)) + 
geom_point(aes(shape=Type), size=2.5) + 
geom_polygon(data = hulls, aes(x=PCoA1, y=PCoA2), alpha=0.3) +
scale_shape_manual(values=c(15,16,17))+
theme_bw()+ 
theme(panel.grid.minor.y=element_blank(),panel.grid.major.y=element_blank())+ 
theme(panel.grid.minor.x=element_blank(),panel.grid.major.x=element_blank()) + 
labs(title="28S_DNA input", x=labs[1], y=labs[2]) + 
theme(axis.title.y=element_text(colour = 'black',size = 12,family='serif')) + 
theme(axis.title.x=element_text(colour = 'black',size = 12, family='serif')) + 
theme(axis.text.y=element_text(colour = 'black', size = 12,family='serif' )) + 
theme(axis.text.x=element_text(colour = 'black', size = 12, family='serif')) + 
theme(legend.text=element_text(size=13,family="serif")) + 
theme(legend.key=element_rect(fill="transparent", colour=NA)) + 
theme(legend.background=element_rect(fill=NA)) + 
theme(plot.title=element_text(colour= 'black', size=13, family="serif",face='bold')) + 
theme(legend.title=element_text(color="black", size=12,family='serif')) + 
guides(color=guide_legend(override.aes=list(shape=15, size=2))) + 
guides(shape=guide_legend(override.aes=list(size=3.6))) + 
theme(legend.key.size=unit("0.5","cm")) +
theme(legend.position="none")

######################
###Shotgun DNA input###
setwd("/Users/Dandan/Desktop/NEWMockManuscript/ShotgunMockResults/ShotgunMockDNA")
RelaAbun <-read.csv("./RelaContigs_DNA.csv",header=T, row.names=1) #Sample in row, ASV in colum
bc.d <-vegdist(t(RelaAbun[,1:9]), k=2, method="bray")
bc.pcoa=cmdscale(bc.d, eig=TRUE)
bc.pcoa

#percent explained by the first and second axis
ax1.v.bc=bc.pcoa$eig[1]/sum(bc.pcoa$eig)
ax2.v.bc=bc.pcoa$eig[2]/sum(bc.pcoa$eig)
# look at the output
ax1.v.bc *100
ax2.v.bc *100

# or
percent_explained <- 100 * bc.pcoa$eig /sum(bc.pcoa$eig)
#'round' function will round our numbers to the one significant digit to the right of the decimal point
#If there is 0 after the decimal point it will be truncated, and if we want that decimal point in there, 
#use 'format' function, so wrap the "round" function in the "format" function, as nesting fucntion
#and the argument is "nsmall=1" in 'format'allows to ensure at least there is one value to the right of decimal point.
#"trim=True" is trim the white space from the front strings
pretty_pe <-format(round(percent_explained[1:2], digits=1), nsmall=1,trim=TRUE)
#library("glue") mased from dplyr
#library("dplyr")
library("glue")
labs<- c(glue("PCo 1 ({pretty_pe[1]}%)"), glue("PCo 2 ({pretty_pe[2]}%)"))
  
Mymeta =data.frame(Type=c("Tolerant_Dominance","Tolerant_Dominance","Tolerant_Dominance", "Less sensitive_Dominance", "Less sensitive_Dominance","Less sensitive_Dominance","Sensitive_Dominance", "Sensitive_Dominance","Sensitive_Dominance"))
PCoA= data.frame(PCoA1=bc.pcoa$points[,1], PCoA2=bc.pcoa$points[,2], Type=Mymeta$Type)
PCoA$Type<-factor(PCoA$Type, levels=c("Tolerant_Dominance","Less sensitive_Dominance","Sensitive_Dominance"))
find_hull <-function(PCoA) PCoA[chull(PCoA$PCoA1,PCoA$PCoA2),]
hulls <-ddply(PCoA, "Type",find_hull) 

p3 <-ggplot(data=PCoA, aes(PCoA1, PCoA2, shape=Type)) + 
geom_point(aes(shape=Type), size=2.5) + 
geom_polygon(data = hulls, aes(x=PCoA1, y=PCoA2), alpha=0.3) +
scale_shape_manual(values=c(15,16,17))+
theme_bw()+ 
theme(panel.grid.minor.y=element_blank(),panel.grid.major.y=element_blank())+ 
theme(panel.grid.minor.x=element_blank(),panel.grid.major.x=element_blank()) + 
labs(title="Shotgun_DNA input", x=labs[1], y=labs[2]) + 
theme(axis.title.y=element_text(colour = 'black',size = 12,family='serif')) + 
theme(axis.title.x=element_text(colour = 'black',size = 12, family='serif')) + 
theme(axis.text.y=element_text(colour = 'black', size = 12,family='serif' )) + 
theme(axis.text.x=element_text(colour = 'black', size = 12, family='serif')) + 
theme(legend.text=element_text(size=13,family="serif")) + 
theme(legend.key=element_rect(fill="transparent", colour=NA)) + 
theme(legend.background=element_rect(fill=NA)) + 
theme(plot.title=element_text(colour= 'black', size=13, family="serif",face='bold')) + 
theme(legend.title=element_text(color="black", size=12,family='serif')) + 
guides(color=guide_legend(override.aes=list(shape=15, size=2))) + 
guides(shape=guide_legend(override.aes=list(size=3.6))) + 
theme(legend.key.size=unit("0.5","cm")) +
theme(legend.position="none")

FigureS2A <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3,labels =c('A'))
#pa<-annotate_figure(figure,
#                top = text_grob("28S_individual namatodes", color = "black", family = "serif", size = 14, face="bold"),
#                left = text_grob("Relative abundance %", color = "black",
#                                 family = "serif", size = 13, rot=90),
#               bottom =text_grob("Number of individuals", color="black", size=13, family="serif"))
pdf("./FigureS2A_PCoA_DNAinput.pdf", width=4, height=10)
FigureS2A
dev.off()

#####################################
######PcoA Individual nematodes######
####18S individual nematodes
setwd("/Users/Dandan/Desktop/NEWMockManuscript/18SMockResults/MockIndiv/")
RelaAbun_Indiv <-read.csv("./RelAbun18S_Indiv.csv",header=T, row.names=1)
bc.d <-vegdist(t(RelaAbun_Indiv[,1:12]), k=2, method="bray")
bc.pcoa=cmdscale(bc.d, eig=TRUE)
bc.pcoa

#percent explained by the first and second axis
ax1.v.bc=bc.pcoa$eig[1]/sum(bc.pcoa$eig)
ax2.v.bc=bc.pcoa$eig[2]/sum(bc.pcoa$eig)
# look at the output
ax1.v.bc *100
ax2.v.bc *100

# or
percent_explained <- 100 * bc.pcoa$eig /sum(bc.pcoa$eig)
#'round' function will round our numbers to the one significant digit to the right of the decimal point
#If there is 0 after the decimal point it will be truncated, and if we want that decimal point in there, 
#use 'format' function, so wrap the "round" function in the "format" function, as nesting fucntion
#and the argument is "nsmall=1" in 'format'allows to ensure at least there is one value to the right of decimal point.
#"trim=True" is trim the white space from the front strings
pretty_pe <-format(round(percent_explained[1:2], digits=1), nsmall=1,trim=TRUE)
#library("glue") mased from dplyr
#library("dplyr")
library("glue")
labs<- c(glue("PCo 1 ({pretty_pe[1]}%)"), glue("PCo 2 ({pretty_pe[2]}%)"))

Mymeta =data.frame(Type=c("Even_Community","Even_Community","Even_Community","Tolerant_Dominance","Tolerant_Dominance","Tolerant_Dominance", "Less sensitive_Dominance", "Less sensitive_Dominance","Less sensitive_Dominance","Sensitive_Dominance", "Sensitive_Dominance","Sensitive_Dominance"))
PCoA= data.frame(PCoA1=bc.pcoa$points[,1], PCoA2=bc.pcoa$points[,2], Type=Mymeta$Type)
PCoA$Type<-factor(PCoA$Type, levels=c("Even_Community","Tolerant_Dominance","Less sensitive_Dominance","Sensitive_Dominance"))
find_hull <-function(PCoA) PCoA[chull(PCoA$PCoA1,PCoA$PCoA2),]
hulls <-ddply(PCoA, "Type",find_hull) 

p4 <-ggplot(data=PCoA, aes(PCoA1, PCoA2, shape=Type)) + 
geom_point(aes(shape=Type), size=2.5) + 
geom_polygon(data = hulls, aes(x=PCoA1, y=PCoA2), alpha=0.3) +
scale_shape_manual(values=c(1,15,16,17))+
theme_bw()+ 
theme(panel.grid.minor.y=element_blank(),panel.grid.major.y=element_blank())+ 
theme(panel.grid.minor.x=element_blank(),panel.grid.major.x=element_blank()) + 
labs(title="18S_nematode specimens", x=labs[1], y=labs[2]) + 
theme(axis.title.y=element_text(colour = 'black',size = 12,family='serif')) + 
theme(axis.title.x=element_text(colour = 'black',size = 12, family='serif')) + 
theme(axis.text.y=element_text(colour = 'black', size = 12,family='serif' )) + 
theme(axis.text.x=element_text(colour = 'black', size = 12, family='serif')) + 
theme(legend.text=element_text(size=13,family="serif")) + 
theme(legend.key=element_rect(fill="transparent", colour=NA)) + 
theme(legend.background=element_rect(fill=NA)) + 
theme(plot.title=element_text(colour= 'black', size=13, family="serif",face='bold')) + 
theme(legend.title=element_text(color="black", size=12,family='serif')) + 
guides(color=guide_legend(override.aes=list(shape=15, size=2))) + 
guides(shape=guide_legend(override.aes=list(size=3.6))) + 
theme(legend.key.size=unit("0.5","cm")) +
theme(legend.position="none")

#############################
#####28S individual nematodes
#############################
setwd("/Users/Dandan/Desktop/NEWMockManuscript/28SMockResults/MockIndiv")
RelaAbun_Indiv <-read.csv("./RelAbun28S_Indiv.csv",header=T, row.names=1) #Sample in column, ASV in row
#### PCoA plot #####
bc.d <-vegdist(t(RelaAbun_Indiv[,1:12]), k=2, method="bray")
bc.pcoa=cmdscale(bc.d, eig=TRUE)
bc.pcoa

#percent explained by the first and second axis
ax1.v.bc=bc.pcoa$eig[1]/sum(bc.pcoa$eig)
ax2.v.bc=bc.pcoa$eig[2]/sum(bc.pcoa$eig)
# look at the output
ax1.v.bc *100
ax2.v.bc *100

# or
percent_explained <- 100 * bc.pcoa$eig /sum(bc.pcoa$eig)
#'round' function will round our numbers to the one significant digit to the right of the decimal point
#If there is 0 after the decimal point it will be truncated, and if we want that decimal point in there, 
#use 'format' function, so wrap the "round" function in the "format" function, as nesting fucntion
#and the argument is "nsmall=1" in 'format'allows to ensure at least there is one value to the right of decimal point.
#"trim=True" is trim the white space from the front strings
pretty_pe <-format(round(percent_explained[1:2], digits=1), nsmall=1,trim=TRUE)
#library("glue") mased from dplyr
labs<- c(glue("PCo 1 ({pretty_pe[1]}%)"), glue("PCo 2 ({pretty_pe[2]}%)"))
  
Mymeta =data.frame(Type=c("Even_Community","Even_Community","Even_Community","Tolerant_Dominance","Tolerant_Dominance","Tolerant_Dominance", "Less sensitive_Dominance", "Less sensitive_Dominance","Less sensitive_Dominance","Sensitive_Dominance", "Sensitive_Dominance","Sensitive_Dominance"))
PCoA= data.frame(PCoA1=bc.pcoa$points[,1], PCoA2=bc.pcoa$points[,2], Type=Mymeta$Type)
PCoA$Type<-factor(PCoA$Type, levels=c("Even_Community","Tolerant_Dominance","Less sensitive_Dominance","Sensitive_Dominance"))
find_hull <-function(PCoA) PCoA[chull(PCoA$PCoA1,PCoA$PCoA2),]
hulls <-ddply(PCoA, "Type",find_hull) 

p5 <-ggplot(data=PCoA, aes(PCoA1, PCoA2, shape=Type)) + 
geom_point(aes(shape=Type), size=2.5) + 
geom_polygon(data = hulls, aes(x=PCoA1, y=PCoA2), alpha=0.3) +
scale_shape_manual(values=c(1,15,16,17))+
theme_bw()+ 
theme(panel.grid.minor.y=element_blank(),panel.grid.major.y=element_blank())+ 
theme(panel.grid.minor.x=element_blank(),panel.grid.major.x=element_blank()) + 
labs(title="28S_nematode specimens", x=labs[1], y=labs[2]) + 
theme(axis.title.y=element_text(colour = 'black',size = 12,family='serif')) + 
theme(axis.title.x=element_text(colour = 'black',size = 12, family='serif')) + 
theme(axis.text.y=element_text(colour = 'black', size = 12,family='serif' )) + 
theme(axis.text.x=element_text(colour = 'black', size = 12, family='serif')) + 
theme(legend.text=element_text(size=13,family="serif")) + 
theme(legend.key=element_rect(fill="transparent", colour=NA)) + 
theme(legend.background=element_rect(fill=NA)) + 
theme(plot.title=element_text(colour= 'black', size=13, family="serif",face='bold')) + 
theme(legend.title=element_text(color="black", size=12,family='serif')) + 
guides(color=guide_legend(override.aes=list(shape=15, size=2))) + 
guides(shape=guide_legend(override.aes=list(size=3.6))) + 
theme(legend.key.size=unit("0.5","cm")) +
theme(legend.position="none")

####################################
######Shotgun individual nematodes###
setwd("/Users/Dandan/Desktop/NEWMockManuscript/ShotgunMockResults/ShotgunMockIndiv")
RelaAbun <-read.csv("./RelAbun_Contigs_Indiv.csv", header=T, row.names=1)
bc.d <-vegdist(t(RelaAbun[,1:12]), k=2, method="bray")
bc.pcoa=cmdscale(bc.d, eig=TRUE)
bc.pcoa

#percent explained by the first and second axis
ax1.v.bc=bc.pcoa$eig[1]/sum(bc.pcoa$eig)
ax2.v.bc=bc.pcoa$eig[2]/sum(bc.pcoa$eig)
# look at the output
ax1.v.bc *100
ax2.v.bc *100

# or
percent_explained <- 100 * bc.pcoa$eig /sum(bc.pcoa$eig)
#'round' function will round our numbers to the one significant digit to the right of the decimal point
#If there is 0 after the decimal point it will be truncated, and if we want that decimal point in there, 
#use 'format' function, so wrap the "round" function in the "format" function, as nesting fucntion
#and the argument is "nsmall=1" in 'format'allows to ensure at least there is one value to the right of decimal point.
#"trim=True" is trim the white space from the front strings
pretty_pe <-format(round(percent_explained[1:2], digits=1), nsmall=1,trim=TRUE)
#library("glue") mased from dplyr
#library("dplyr")
library("glue")
labs<- c(glue("PCo 1 ({pretty_pe[1]}%)"), glue("PCo 2 ({pretty_pe[2]}%)"))
  
Mymeta =data.frame(Type=c("Even_Community","Even_Community","Even_Community","Tolerant_Dominance","Tolerant_Dominance","Tolerant_Dominance", "Less sensitive_Dominance", "Less sensitive_Dominance","Less sensitive_Dominance","Sensitive_Dominance", "Sensitive_Dominance","Sensitive_Dominance"))
PCoA= data.frame(PCoA1=bc.pcoa$points[,1], PCoA2=bc.pcoa$points[,2], Type=Mymeta$Type)
PCoA$Type<-factor(PCoA$Type, levels=c("Even_Community","Tolerant_Dominance","Less sensitive_Dominance","Sensitive_Dominance"))
find_hull <-function(PCoA) PCoA[chull(PCoA$PCoA1,PCoA$PCoA2),]
hulls <-ddply(PCoA, "Type",find_hull) 

p6 <-ggplot(data=PCoA, aes(PCoA1, PCoA2, shape=Type)) + 
geom_point(aes(shape=Type), size=2.5) + 
geom_polygon(data = hulls, aes(x=PCoA1, y=PCoA2), alpha=0.3) +
scale_shape_manual(values=c(1,15,16,17))+
theme_bw()+ 
theme(panel.grid.minor.y=element_blank(),panel.grid.major.y=element_blank())+ 
theme(panel.grid.minor.x=element_blank(),panel.grid.major.x=element_blank()) + 
labs(title="Shotgun_nematode specimens", x=labs[1], y=labs[2]) + 
theme(axis.title.y=element_text(colour = 'black',size = 12,family='serif')) + 
theme(axis.title.x=element_text(colour = 'black',size = 12, family='serif')) + 
theme(axis.text.y=element_text(colour = 'black', size = 12,family='serif' )) + 
theme(axis.text.x=element_text(colour = 'black', size = 12, family='serif')) + 
theme(legend.text=element_text(size=13,family="serif")) + 
theme(legend.key=element_rect(fill="transparent", colour=NA)) + 
theme(legend.background=element_rect(fill=NA)) + 
theme(plot.title=element_text(colour= 'black', size=13, family="serif",face='bold')) + 
theme(legend.title=element_text(color="black", size=12,family='serif')) + 
guides(color=guide_legend(override.aes=list(shape=15, size=2))) + 
guides(shape=guide_legend(override.aes=list(size=3.6))) + 
theme(legend.key.size=unit("0.5","cm")) +
theme(legend.position="right")

Figure S2B <- ggarrange(p4, p5, p6, ncol = 1, nrow = 3,labels =c('B'))
#pa<-annotate_figure(figure,
#                top = text_grob("28S_individual namatodes", color = "black", family = "serif", size = 14, face="bold"),
#                left = text_grob("Relative abundance %", color = "black",
#                                 family = "serif", size = 13, rot=90),
#               bottom =text_grob("Number of individuals", color="black", size=13, family="serif"))
pdf("./Figure S2B_PCoA_Individual.pdf", width=4, height=10)
FigureS2B
dev.off()


#legend <-cowplot::get_legend(p6) #change the legend position to right
#l <-as_ggplot(legend)
Fig S2<- ggarrange(FigureS2A, FigureS2B, ncol = 2, nrow = 1) #adjust plot space 
                        #does the plot have a common legend
pdf("/Users/dandanizabel-shen/Desktop/Figure3.pdf", width=9, height=11)
FigS2
dev.off()

###########################################################################
#########Person correlation figures for supplementary information#########
##########################################################################

##18S DNA input
setwd("/Users/Dandan/Desktop/NEWMockManuscript/18SMockResults/DNA_Input/")
Sabalinear <-read.csv("./Sabalinear.csv", header=T, row.names=1)
p3<-ggscatter(Sabalinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Sabatieria") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Halolinear <-read.csv("./Halolinear.csv", header=T, row.names=1)
p4<-ggscatter(Halolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Halomonhystera") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Leptlinear <-read.csv("./Leptlinear.csv", header=T, row.names=1)
p5<-ggscatter(Leptlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Leptolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))



Paralinear <-read.csv("./Paralinear.csv", header=T, row.names=1)
p6<-ggscatter(Paralinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Paracanthonchus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Microlinear <-read.csv("./Microlinear.csv", header=T, row.names=1)
p7<-ggscatter(Microlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Microlaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Daptolinear <-read.csv("./Daptolinear.csv", header=T, row.names=1)
p8<-ggscatter(Daptolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Daptonema") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Axolinear <-read.csv("./Axolinear.csv", header=T, row.names=1)
p9<-ggscatter(Axolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Axonolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Desmlinear <-read.csv("./Desmlinear.csv", header=T, row.names=1)
p10<-ggscatter(Desmlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Desmolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=14, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

figure <- ggarrange(p3, p4, p5, p6, p7, p8, p9, p10,
                    ncol = 4, nrow = 2)
pa<-annotate_figure(figure,
                top = text_grob("18S_DNA input", color = "black", family = "serif", size = 14, face="bold"),
                left = text_grob("Relative abundance %", color = "black",
                                 family = "serif", size = 13, rot=90),
               bottom =text_grob("DNA (ng)", color="black", size=13, family="serif"))
pdf("./FigureNEW1.pdf", width=13.8, height=6)
pa
dev.off()

###18S individual nematodes###
setwd("/Users/dandanizabel-shen/Desktop/NematodaPaper/NEWMockManuscript/18SMockResults/MockIndiv")
Sabalinear <-read.csv("./Sabalinear.csv", header=T, row.names=1)
p20<-ggscatter(Sabalinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Sabatieria") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Halolinear <-read.csv("./Halolinear.csv", header=T, row.names=1)
p21<-ggscatter(Halolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Halomonhystera") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))


Leptlinear <-read.csv("./Leptlinear.csv", header=T, row.names=1)
p22<-ggscatter(Leptlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Leptolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Paralinear <-read.csv("./Paralinear.csv", header=T, row.names=1)
p23<-ggscatter(Paralinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Paracanthonchus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Microlinear <-read.csv("./Microlinear.csv", header=T, row.names=1)
p24<-ggscatter(Microlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Microlaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Daptolinear <-read.csv("./Daptolinear.csv", header=T, row.names=1)
p25<-ggscatter(Daptolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Daptonema") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Axolinear <-read.csv("./Axolinear.csv", header=T, row.names=1)
p26<-ggscatter(Axolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Axonolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Desmlinear <-read.csv("./Desmlinear.csv", header=T, row.names=1)
p27<-ggscatter(Desmlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab =(""), xlab =(""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Desmolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=14, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

figure <- ggarrange(p20, p21, p22, p23, p24, p25, p26, p27,
                    ncol = 4, nrow = 2)
pa<-annotate_figure(figure,
                top = text_grob("18S_individual namatodes", color = "black", family = "serif", size = 14, face="bold"),
                left = text_grob("Relative abundance %", color = "black",
                                 family = "serif", size = 13, rot=90),
               bottom =text_grob("Number of individuals", color="black", size=13, family="serif"))
pdf("./Figure19.pdf", width=13.8, height=6)
pa
dev.off()


####28S DNA input#####
setwd("/Users/Dandan/Desktop/NEWMockManuscript/28SMockResults/DNAinput")
Sabalinear <-read.csv("./Sabalinear.csv", header=T, row.names=1)
p3<-ggscatter(Sabalinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Sabatieria") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Halolinear <-read.csv("./Halolinear.csv", header=T, row.names=1)
p4<-ggscatter(Halolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Halomonhystera") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Leptlinear <-read.csv("./Leptlinear.csv", header=T, row.names=1)
p5<-ggscatter(Leptlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Leptolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Paralinear <-read.csv("./Paralinear.csv", header=T, row.names=1)
p6<-ggscatter(Paralinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Paracanthonchus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Microlinear <-read.csv("./Microlinear.csv", header=T, row.names=1)
p7<-ggscatter(Microlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Microlaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Daptolinear <-read.csv("./Daptolinear.csv", header=T, row.names=1)
p8<-ggscatter(Daptolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Daptonema") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Axolinear <-read.csv("./Axolinear.csv", header=T, row.names=1)
p9<-ggscatter(Axolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Axonolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Desmlinear <-read.csv("./Desmlinear.csv", header=T, row.names=1)
p10<-ggscatter(Desmlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Desmolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=14, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

figure <- ggarrange(p3, p4, p5, p6, p7, p8, p9, p10,
                    ncol = 4, nrow = 2)
pa<-annotate_figure(figure,
                top = text_grob("28S_DNA input", color = "black", family = "serif", size = 14, face="bold"),
                left = text_grob("Relative abundance %", color = "black",
                                 family = "serif", size = 13, rot=90),
               bottom =text_grob("DNA (ng)", color="black", size=13, family="serif"))
pdf("./Figure3_28S.pdf", width=13.8, height=6)
pa
dev.off()


#####28S individual nematodes####
setwd("/Users/Dandan/Desktop/NEWMockManuscript/28SMockResults/MockIndiv")
Sabalinear <-read.csv("./Sabalinear_28S.csv", header=T, row.names=1)
p20<-ggscatter(Sabalinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Sabatieria") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Halolinear <-read.csv("./Halolinear_28S.csv", header=T, row.names=1)
p21<-ggscatter(Halolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Halomonhystera") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Leptlinear <-read.csv("./Leptlinear_28S.csv", header=T, row.names=1)
p22<-ggscatter(Leptlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Leptolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Paralinear <-read.csv("./Paralinear_28S.csv", header=T, row.names=1)
p23<-ggscatter(Paralinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Paracanthonchus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Microlinear <-read.csv("./Microlinear_28S.csv", header=T, row.names=1)
p24<-ggscatter(Microlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Microlaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Daptolinear <-read.csv("./Daptolinear_28S.csv", header=T, row.names=1)
p25<-ggscatter(Daptolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Daptonema") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Axolinear <-read.csv("./Axolinear_28S.csv", header=T, row.names=1)
p26<-ggscatter(Axolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Axonolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Desmlinear <-read.csv("./Desmlinear_28S.csv", header=T, row.names=1)
p27<-ggscatter(Desmlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab =(""), xlab =(""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Desmolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=14, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))
figure <- ggarrange(p20, p21, p22, p23, p24, p25, p26, p27,
                    ncol = 4, nrow = 2)
pa<-annotate_figure(figure,
                top = text_grob("28S_individual namatodes", color = "black", family = "serif", size = 14, face="bold"),
                left = text_grob("Relative abundance %", color = "black",
                                 family = "serif", size = 13, rot=90),
               bottom =text_grob("Number of individuals", color="black", size=13, family="serif"))
pdf("./Figure19_28SIndvi.pdf", width=13.8, height=6)
pa
dev.off()


####Shotgun DNA input###
setwd("/Users/Dandan/Desktop/NEWMockManuscript/ShotgunMockResults/ShotgunMockDNA")
Sabalinear <-read.csv("./Shotgun_Sabalinear.csv", header=T, row.names=1)
p36<-ggscatter(Sabalinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Sabatieria") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))


Halolinear <-read.csv("./Shotgun_Halolinear.csv", header=T, row.names=1)
p37<-ggscatter(Halolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Halomonhystera") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Leptlinear <-read.csv("./Shotgun_Leptlinear.csv", header=T, row.names=1)
p38<-ggscatter(Leptlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Leptolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Paralinear <-read.csv("./Shotgun_Paralinear.csv", header=T, row.names=1)
p39<-ggscatter(Paralinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Paracanthonchus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Microlinear <-read.csv("./Shotgun_Microlinear.csv", header=T, row.names=1)
p40<-ggscatter(Microlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Microlaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Daptolinear <-read.csv("./Shotgun_Daptolinear.csv", header=T, row.names=1)
p41<-ggscatter(Daptolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Daptonema") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Axolinear <-read.csv("./Shotgun_Axolinear.csv", header=T, row.names=1)
p42<-ggscatter(Axolinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Axonolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Desmlinear <-read.csv("./Shotgun_Desmlinear.csv", header=T, row.names=1)
p43<-ggscatter(Desmlinear, x = "DNAcon", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Desmolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=14, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

figure <- ggarrange(p36, p37, p38, p39, p40, p41, p42, p43,
                    ncol = 4, nrow = 2)
pa<-annotate_figure(figure,
                top = text_grob("Shotgun_DNA input", color = "black", family = "serif", size = 14, face="bold"),
                left = text_grob("Relative abundance %", color = "black",
                                 family = "serif", size = 13, rot=90),
               bottom =text_grob("DNA (ng)", color="black", size=13, family="serif"))
pdf("./Shotgun_correlation_DNAinput.pdf", width=13.8, height=6)


####Shotgun indvidual nematode###
setwd("/Users/Dandan/Desktop/NEWMockManuscript/ShotgunMockResults/ShotgunMockIndiv")
Sabalinear <-read.csv("./ShotgunIndiv_Sabalinear.csv", header=T, row.names=1)
p44<-ggscatter(Sabalinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Sabatieria") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Halolinear <-read.csv("./ShotgunIndiv_Halolinear.csv", header=T, row.names=1)
p45<-ggscatter(Halolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Halomonhystera") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Leptlinear <-read.csv("./ShotgunIndiv_Leptlinear.csv", header=T, row.names=1)
p46<-ggscatter(Leptlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Leptolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Paralinear <-read.csv("./ShotgunIndiv_Paralinear.csv", header=T, row.names=1)
p47<-ggscatter(Paralinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Paracanthonchus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Microlinear <-read.csv("./ShotgunIndiv_Microlinear.csv", header=T, row.names=1)
p48<-ggscatter(Microlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Microlaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Daptolinear <-read.csv("./ShotgunIndiv_Daptolinear.csv", header=T, row.names=1)
p49<-ggscatter(Daptolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Daptonema") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif", face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))


Axolinear <-read.csv("./ShotgunIndiv_Axolinear.csv", header=T, row.names=1)
p50<-ggscatter(Axolinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab = (""), xlab = (""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Axonolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=12.8, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

Desmlinear <-read.csv("./ShotgunIndiv_Desmlinear.csv", header=T, row.names=1)
p51<-ggscatter(Desmlinear, x = "Indiv", y = "Relative",  shape=1,
            add = "reg.line", add.params=list(color="blue", fill="lightgray"), conf.int = TRUE, 
            cor.coef = TRUE, cor.method = "pearson", size=3,
            ylab =(""), xlab =(""), cor.coef.size = 4, font.family="serif") + 
            labs(title="Desmolaimus") + 
            theme(axis.title.y=element_text(colour = 'black',size =12.8, family="serif")) + 
            theme(axis.title.x=element_text(colour = 'black', size = 12.8,family="serif" )) + 
            theme(axis.text.y=element_text(colour = 'black', size = 12.8, family="serif")) + 
            theme(plot.title=element_text(colour= 'black', size=14, family="serif",face='bold.italic')) + 
            theme(axis.text.x=element_text(colour = 'black', size = 12.8, family="serif"))

figure <- ggarrange(p44, p45, p46, p47, p48, p49, p50, p51,
                    ncol = 4, nrow = 2)
pa<-annotate_figure(figure,
                top = text_grob("Shotgun_individual namatodes", color = "black", family = "serif", size = 14, face="bold"),
                left = text_grob("Relative abundance %", color = "black",
                                 family = "serif", size = 13, rot=90),
               bottom =text_grob("Number of individuals", color="black", size=13, family="serif"))
pdf("./Shotgun_Correlation_Indvi.pdf", width=13.8, height=6)
pa
dev.off()


###########################
#### False positive####
#######################
######Plot Non Nematoda fraction#######

FalsePositive <-read.csv("./FalsePositive.csv", header=T)
## have been merged Paracanthoncus with closely related and Microlaimus with closely related

#remove the text angle=30, hjust=1
FalsePositive$Sequence <-factor(FalsePositive$Sequence, levels=c("18S", "Shotgun"))
#reorder treatment ID
FalsePositive$Mock <-factor(FalsePositive$Mock, levels=c("DNA input","Nematode specimens"))

#plotting##

#set.seed(123) #for reproducibility
#stat.test <-DNAinput %>%
#  group_by(Sequence) %>%
#  t_test(18S ~Shotgun) %>%
#  adjust_pvalue() %>%
#  mutate(y.position = 35)
#stat.test


p52<-ggplot(FalsePositive, aes(x=Sequence, y=Relative, color=Sequence)) + 
geom_boxplot() + 
scale_color_manual(values=c("18S"="firebrick2","Shotgun"="deepskyblue2"), name="Sequences") + 
geom_point(position=(position=position_jitterdodge())) +
theme(panel.grid.minor.y=element_blank(),panel.grid.major.y=element_blank()) + 
theme(panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank()) + 
theme(panel.background =element_rect(fil="white", color="black")) + 
theme(axis.text.x =element_text(colour = 'black', size = 10, family='serif')) + 
theme(axis.text.y=element_text(colour = 'black', size = 10, family='serif')) + 
theme(axis.title.x=element_text(colour = 'black',size = 11, family='serif')) + 
theme(axis.ticks.x = element_blank()) + 
theme(axis.title.y=element_text(colour = 'black',size = 11, family='serif')) + 
theme(plot.title=element_text(size=11, colour='black', face='bold', family='serif')) + 
theme(legend.title=element_text(size=10, family='serif')) +  
theme(legend.text=element_text(size=10, family='serif')) + 
theme(legend.key.size=unit("0.34","cm")) + 
theme(legend.key = element_rect(colour = "white")) +
labs(title="Sequences not assigned to Nematoda of interest", y="Relative abundance %", x="Sequences") +
facet_grid(.~Mock, scales="free") +
geom_signif(comparisons = list(c("18S", "Shotgun")), map_signif_level=TRUE, col = "black", size = 0.4) +
theme(strip.text=element_text(size=10,face='bold', family='serif')) + 
theme(strip.background=element_rect(size=1)) + 
theme(panel.margin=unit(0.18,"line")) + 
theme(strip.text.x=element_text(margin=margin(0.09,0,0.09,0,"cm"))) + 
theme(plot.margin=margin(0.03,0,0.05,0.05,"cm")) 
pdf("./FalsePositive.pdf", width=4.4, height=4.8)
p52
dev.off()

######Perform Welch's ttest
set.seed(123) #for reproducibility
DNAinput <-subset(FalsePositive, Mock == "DNA input")
DNAinput18S <-subset (DNAinput, Sequence == "18S")
DNAinputShotgun <-subset(DNAinput, Sequence == "Shotgun")

###Run T test
DNAinputTest <-t.test(DNAinput18S$Relative, DNAinputShotgun$Relative)
DNAinputTest

NematodeSpecimens <-subset(FalsePositive, Mock == "Nematode specimens")
NematodeSpe18S <-subset (NematodeSpecimens, Sequence == "18S")
NematodeSpeShotgun <-subset(NematodeSpecimens, Sequence == "Shotgun")

###Run T test
NematodeSpeTest <-t.test(NematodeSpe18S$Relative, NematodeSpeShotgun$Relative)
NematodeSpeTest
